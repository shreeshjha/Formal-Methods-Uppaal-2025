<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.
typedef struct {
  int x;
  int y;
} Coord;

const int PATH_LENGTH = 5;
const Coord path[PATH_LENGTH] = {
  {0,0}, {0,1}, {0,2}, {0,3}, {1,3} // example path
};

clock clk;
int position = 0; // current position on path


const int FIRE_RATE = 3;
const int TURRET_X = 0;
const int TURRET_Y = 1;
const int TURRET_RANGE = 1;

bool e1_in_range = false;
bool e2_in_range = false;


int e1_health = 2;
int e2_health = 2;

int e1_pos = 0;
int e2_pos = 0;

int lives = 5;

// === Configuration VI: Assignment ===
const int basic_x[1] = {5};
const int basic_y[1] = {5};

const int cannon_x[4] = {8, 8, 14, 14};
const int cannon_y[4] = {2, 6, 2, 6};

const int sniper_x[2] = {2, 11};
const int sniper_y[2] = {3, 5};


</declaration>
	<template>
		<name>TurretAI</name>
		<parameter>int x, int y</parameter>
		<declaration>clock t;
</declaration>
		<location id="id0" x="0" y="0">
			<name x="-10" y="-34">Idle</name>
		</location>
		<location id="id1" x="0" y="85">
			<name x="-10" y="51">Firing</name>
		</location>
		<init ref="id0"/>
		<transition id="id2">
			<source ref="id1"/>
			<target ref="id0"/>
			<nail x="-136" y="93"/>
		</transition>
		<transition id="id3">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="25" y="-17">t&gt;=FIRE_RATE</label>
			<label kind="assignment" x="263" y="-51">t = 0,
e1_in_range = abs(path[e1_pos].x - TURRET_X) + abs(path[e1_pos].y - TURRET_Y) &lt;= TURRET_RANGE,
e2_in_range = abs(path[e2_pos].x - TURRET_X) + abs(path[e2_pos].y - TURRET_Y) &lt;= TURRET_RANGE,
e1_health = (e1_in_range &amp;&amp; e1_health &gt; 0) ? e1_health - 1 : e1_health,
e2_health = (e2_in_range &amp;&amp; e2_health &gt; 0) ? e2_health - 1 : e2_health</label>
		</transition>
	</template>
	<template>
		<name>EnemyTemplate</name>
		<parameter>const int id</parameter>
		<location id="id4" x="0" y="0">
			<name x="-10" y="-34">Spawned</name>
		</location>
		<location id="id5" x="-68" y="68">
			<name x="-78" y="34">Moving</name>
		</location>
		<location id="id6" x="76" y="68">
			<name x="66" y="34">Done</name>
		</location>
		<location id="id7" x="297" y="-144">
			<name x="287" y="-178">Goal</name>
		</location>
		<location id="id8" x="-68" y="229">
			<name x="-78" y="195">Killed</name>
		</location>
		<init ref="id4"/>
		<transition id="id9">
			<source ref="id5"/>
			<target ref="id8"/>
			<label kind="guard" x="-68" y="114">(id == 1 &amp;&amp; e1_health == 0) || (id == 2 &amp;&amp; e2_health == 0)</label>
		</transition>
		<transition id="id10">
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="guard" x="-50" y="-72">(position &gt;= PATH_LENGTH - 1) &amp;&amp; 
((id == 1 &amp;&amp; e1_health &gt; 0) || (id == 2 &amp;&amp; e2_health &gt; 0))</label>
			<label kind="assignment" x="-50" y="-38">lives = lives - 1</label>
		</transition>
		<transition id="id11">
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-50" y="34">position == PATH_LENGTH - 1</label>
		</transition>
		<transition id="id12">
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="-107" y="50">clk&gt;=1 &amp;&amp;
position &lt; PATH_LENGTH - 1 &amp;&amp;
((id == 1 &amp;&amp; e1_health &gt; 0) || (id == 2 &amp;&amp; e2_health &gt; 0))</label>
			<label kind="assignment" x="-107" y="84">clk=0, position=position+1,
e1_pos = (id == 1 ? position : e1_pos),
e2_pos = (id == 2 ? position : e2_pos)</label>
			<nail x="-119" y="76"/>
		</transition>
		<transition id="id13">
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="assignment" x="-50" y="34">clk=0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
E1 = EnemyTemplate(1);
E2 = EnemyTemplate(2);
T = TurretAI(0, 0);

Basic1 = TurretAI(basic_x[0], basic_y[0]);
Cannon1 = TurretAI(cannon_x[0], cannon_y[0]);
Cannon3 = TurretAI(cannon_x[1], cannon_y[1]);
Cannon4 = TurretAI(cannon_x[2], cannon_y[2]);
Sniper1 = TurretAI(sniper_x[0], sniper_y[0]);
Sniper2 = TurretAI(sniper_x[1], sniper_y[1]);

system E1, E2, T, Basic1, Cannon1, Cannon3, Cannon4, Sniper1, Sniper2;



</system>
	<queries>
		<query>
			<formula>A&lt;&gt; (E1.Killed and E2.Killed)
</formula>
			<comment/>
			<result outcome="failure" type="quality" timestamp="2025-04-13 11:07:39 +0200">
			</result>
		</query>
	</queries>
</nta>
