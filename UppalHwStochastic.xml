<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int NUM_ENEMIES = 6; // 3 Circles, 3 Squares

int pos[NUM_ENEMIES] = {0, 0, 0, 0, 0, 0};
int hp[NUM_ENEMIES] = {10,20,35,31,30,40};
int dmg[NUM_ENEMIES] = {3, 3, 3, 5, 5, 5};

typedef struct {
  int x;
  int y;
} Coord;

const int PATH_LENGTH = 23;
const Coord path[PATH_LENGTH] = {
    {0,0}, {1,0}, {2,0}, {3,0}, {4,0}, 
    {4,1}, {4,2}, {4,3}, {4,4}, {5,4},
    {6,4}, {7,4}, {8,4}, {8,5}, {8,6}, 
    {8,7}, {9,7}, {10,7}, {11,7}, {12,7}, 
    {13,7}, {14,7}, {15,7}
};

const Coord mainTower = {15, 7};

clock clk;
int position = 0; // current position on path




int lives = 5;

// === Configuration VI: Assignment ===
const int basic_x[1] = {5};
const int basic_y[1] = {5};

const int cannon_x[4] = {8, 8, 14, 14};
const int cannon_y[4] = {2, 6, 2, 6};

const int sniper_x[2] = {2, 11};
const int sniper_y[2] = {3, 5};


int turret_count = 0;


</declaration>
	<template>
		<name>BasicTurret</name>
		<parameter>int x, int y</parameter>
		<declaration>clock t;
const int FIRE_RATE = 2;
const int RANGE = 3;
const int DAMAGE = 2;
</declaration>
		<location id="id0" x="0" y="0">
			<name x="-10" y="-34">Idle</name>
		</location>
		<location id="id1" x="0" y="144">
			<name x="-10" y="110">Firing</name>
		</location>
		<init ref="id0"/>
		<transition id="id2">
			<source ref="id1"/>
			<target ref="id0"/>
			<nail x="-153" y="144"/>
		</transition>
		<transition id="id3">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="0" y="38">t&gt;=FIRE_RATE</label>
			<label kind="assignment" x="0" y="72">t = 0,
hp[0] = (hp[0] &gt; 0 &amp;&amp; abs(path[pos[0]].x - x) + abs(path[pos[0]].y - y) &lt;= RANGE) ? hp[0] - DAMAGE : hp[0],
hp[1] = (hp[1] &gt; 0 &amp;&amp; abs(path[pos[1]].x - x) + abs(path[pos[1]].y - y) &lt;= RANGE) ? hp[1] - DAMAGE : hp[1],
hp[2] = (hp[2] &gt; 0 &amp;&amp; abs(path[pos[2]].x - x) + abs(path[pos[2]].y - y) &lt;= RANGE) ? hp[2] - DAMAGE : hp[2],
hp[3] = (hp[3] &gt; 0 &amp;&amp; abs(path[pos[3]].x - x) + abs(path[pos[3]].y - y) &lt;= RANGE) ? hp[3] - DAMAGE : hp[3],
hp[4] = (hp[4] &gt; 0 &amp;&amp; abs(path[pos[4]].x - x) + abs(path[pos[4]].y - y) &lt;= RANGE) ? hp[4] - DAMAGE : hp[4],
hp[5] = (hp[5] &gt; 0 &amp;&amp; abs(path[pos[5]].x - x) + abs(path[pos[5]].y - y) &lt;= RANGE) ? hp[5] - DAMAGE : hp[5]</label>
		</transition>
	</template>
	<template>
		<name>CannonTurret</name>
		<parameter>int x, int y</parameter>
		<declaration>clock t;
const int FIRE_RATE = 4;
const int RANGE = 6;
const int DAMAGE = 6;
</declaration>
		<location id="id4" x="0" y="0">
			<name x="-10" y="-34">Idle</name>
		</location>
		<location id="id5" x="0" y="153">
			<name x="-10" y="119">Firing</name>
		</location>
		<init ref="id4"/>
		<transition id="id6">
			<source ref="id5"/>
			<target ref="id4"/>
			<nail x="-187" y="153"/>
		</transition>
		<transition id="id7">
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="0" y="42">t&gt;=FIRE_RATE</label>
			<label kind="assignment" x="0" y="76">t = 0,
hp[0] = (hp[0] &gt; 0 &amp;&amp; abs(path[pos[0]].x - x) + abs(path[pos[0]].y - y) &lt;= RANGE) ? hp[0] - DAMAGE : hp[0],
hp[1] = (hp[1] &gt; 0 &amp;&amp; abs(path[pos[1]].x - x) + abs(path[pos[1]].y - y) &lt;= RANGE) ? hp[1] - DAMAGE : hp[1],
hp[2] = (hp[2] &gt; 0 &amp;&amp; abs(path[pos[2]].x - x) + abs(path[pos[2]].y - y) &lt;= RANGE) ? hp[2] - DAMAGE : hp[2],
hp[3] = (hp[3] &gt; 0 &amp;&amp; abs(path[pos[3]].x - x) + abs(path[pos[3]].y - y) &lt;= RANGE) ? hp[3] - DAMAGE : hp[3],
hp[4] = (hp[4] &gt; 0 &amp;&amp; abs(path[pos[4]].x - x) + abs(path[pos[4]].y - y) &lt;= RANGE) ? hp[4] - DAMAGE : hp[4],
hp[5] = (hp[5] &gt; 0 &amp;&amp; abs(path[pos[5]].x - x) + abs(path[pos[5]].y - y) &lt;= RANGE) ? hp[5] - DAMAGE : hp[5]</label>
		</transition>
	</template>
	<template>
		<name>SniperTurret</name>
		<parameter>int x, int y</parameter>
		<declaration>clock t;
const int FIRE_RATE = 10;
const int RANGE = 8;
const int DAMAGE = 10;
</declaration>
		<location id="id8" x="0" y="0">
			<name x="-10" y="-34">Idle</name>
		</location>
		<location id="id9" x="0" y="110">
			<name x="-10" y="76">Firing</name>
		</location>
		<init ref="id8"/>
		<transition id="id10">
			<source ref="id9"/>
			<target ref="id8"/>
			<nail x="-136" y="110"/>
		</transition>
		<transition id="id11">
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="guard" x="0" y="21">t&gt;=FIRE_RATE</label>
			<label kind="assignment" x="0" y="55">t = 0,
hp[0] = (hp[0] &gt; 0 &amp;&amp; abs(path[pos[0]].x - x) + abs(path[pos[0]].y - y) &lt;= RANGE) ? hp[0] - DAMAGE : hp[0],
hp[1] = (hp[1] &gt; 0 &amp;&amp; abs(path[pos[1]].x - x) + abs(path[pos[1]].y - y) &lt;= RANGE) ? hp[1] - DAMAGE : hp[1],
hp[2] = (hp[2] &gt; 0 &amp;&amp; abs(path[pos[2]].x - x) + abs(path[pos[2]].y - y) &lt;= RANGE) ? hp[2] - DAMAGE : hp[2],
hp[3] = (hp[3] &gt; 0 &amp;&amp; abs(path[pos[3]].x - x) + abs(path[pos[3]].y - y) &lt;= RANGE) ? hp[3] - DAMAGE : hp[3],
hp[4] = (hp[4] &gt; 0 &amp;&amp; abs(path[pos[4]].x - x) + abs(path[pos[4]].y - y) &lt;= RANGE) ? hp[4] - DAMAGE : hp[4],
hp[5] = (hp[5] &gt; 0 &amp;&amp; abs(path[pos[5]].x - x) + abs(path[pos[5]].y - y) &lt;= RANGE) ? hp[5] - DAMAGE : hp[5]</label>
		</transition>
	</template>
	<template>
		<name>GameMonitor</name>
		<location id="id12" x="0" y="0">
			<name x="-10" y="-34">Wait</name>
		</location>
		<location id="id13" x="-8" y="110">
			<name x="-18" y="76">Done</name>
		</location>
		<init ref="id12"/>
		<transition id="id14">
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="-4" y="21">forall (i:int[0,5]) (hp[i] == 0 || (pos[i] == PATH_LENGTH - 1 &amp;&amp; hp[i] &gt; 0))</label>
		</transition>
	</template>
	<template>
		<name>ClockTick</name>
		<declaration>clock tt;</declaration>
		<location id="id15" x="0" y="0">
			<name x="-10" y="-34">Tick</name>
			<label kind="invariant" x="-10" y="17">tt&lt;=1</label>
		</location>
		<init ref="id15"/>
		<transition id="id16">
			<source ref="id15"/>
			<target ref="id15"/>
			<label kind="guard" x="-118" y="-5">tt=1</label>
			<label kind="assignment" x="-118" y="29">tt=0</label>
			<nail x="0" y="59"/>
			<nail x="-136" y="0"/>
		</transition>
	</template>
	<template>
		<name>TurretAI</name>
		<parameter>int x, int y</parameter>
		<declaration>clock t;
const int FIRE_RATE = 2; // basic
const int RANGE = 2;
const int DAMAGE = 2;
</declaration>
		<location id="id17" x="0" y="0">
			<name x="-10" y="-34">Idle</name>
			<label kind="exponentialrate" x="-10" y="34">FIRE_RATE</label>
		</location>
		<location id="id18" x="0" y="85">
			<name x="-10" y="51">Firing</name>
			<label kind="exponentialrate" x="-10" y="119">1.0</label>
		</location>
		<init ref="id17"/>
		<transition id="id19">
			<source ref="id18"/>
			<target ref="id17"/>
			<label kind="assignment" x="-118" y="89">turret_count--</label>
			<nail x="-136" y="93"/>
		</transition>
		<transition id="id20">
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="guard" x="25" y="-17">t&gt;=FIRE_RATE</label>
			<label kind="assignment" x="263" y="-51">t = 0,
turret_count++,
e1_in_range = abs(path[e1_pos].x - TURRET_X) + abs(path[e1_pos].y - TURRET_Y) &lt;= TURRET_RANGE,
e2_in_range = abs(path[e2_pos].x - TURRET_X) + abs(path[e2_pos].y - TURRET_Y) &lt;= TURRET_RANGE,
e1_health = (e1_in_range &amp;&amp; e1_health &gt; 0) ? e1_health - 1 : e1_health,
e2_health = (e2_in_range &amp;&amp; e2_health &gt; 0) ? e2_health - 1 : e2_health</label>
		</transition>
	</template>
	<template>
		<name>EnemyTemplate</name>
		<parameter>const int id</parameter>
		<declaration>clock clk;
int local_pos = 0;
</declaration>
		<location id="id21" x="0" y="0">
			<name x="-10" y="-34">Spawned</name>
			<label kind="exponentialrate" x="-10" y="34">1.0</label>
		</location>
		<location id="id22" x="-68" y="68">
			<name x="-78" y="34">Moving</name>
			<label kind="exponentialrate" x="-78" y="102">1.0</label>
		</location>
		<location id="id23" x="297" y="-144">
			<name x="287" y="-178">Goal</name>
		</location>
		<location id="id24" x="-68" y="229">
			<name x="-78" y="195">Killed</name>
		</location>
		<init ref="id21"/>
		<transition id="id25">
			<source ref="id22"/>
			<target ref="id22"/>
			<label kind="guard" x="-50" y="29">clk&gt;=1 &amp;&amp; hp[id] &gt; 0 &amp;&amp; local_pos &lt; PATH_LENGTH - 1</label>
			<label kind="assignment" x="-50" y="63">clk = 0,
local_pos = local_pos + 1</label>
			<nail x="93" y="59"/>
			<nail x="42" y="93"/>
		</transition>
		<transition id="id26">
			<source ref="id22"/>
			<target ref="id24"/>
			<label kind="guard" x="-68" y="114">clk &gt;= 1 &amp;&amp; hp[id] == 0</label>
			<label kind="assignment" x="-68" y="148">pos[id] = local_pos</label>
		</transition>
		<transition id="id27">
			<source ref="id22"/>
			<target ref="id23"/>
			<label kind="guard" x="-50" y="-72">clk&gt;=1 &amp;&amp; hp[id] &gt; 0 &amp;&amp; local_pos &gt;= PATH_LENGTH - 1</label>
			<label kind="assignment" x="-50" y="-38">pos[id] = local_pos,
lives = lives - dmg[id]</label>
		</transition>
		<transition id="id28">
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="select" x="-59" y="-17">i : int[0,5]</label>
			<label kind="guard" x="-59" y="0">i == 0</label>
			<label kind="assignment" x="-59" y="34">clk=0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
E0 = EnemyTemplate(0);
E1 = EnemyTemplate(1);
E2 = EnemyTemplate(2);
E3 = EnemyTemplate(3);
E4 = EnemyTemplate(4);
E5 = EnemyTemplate(5);
Monitor = GameMonitor();
ClockTick1 = ClockTick();

Basic1 = TurretAI(basic_x[0], basic_y[0]);
Cannon1 = TurretAI(cannon_x[0], cannon_y[0]);
Cannon3 = TurretAI(cannon_x[1], cannon_y[1]);
Cannon4 = TurretAI(cannon_x[2], cannon_y[2]);
Sniper1 = TurretAI(sniper_x[0], sniper_y[0]);
Sniper2 = TurretAI(sniper_x[1], sniper_y[1]);

system E0, E1, E2, E3, E4, E5, Monitor, ClockTick1, Basic1, Cannon1, Cannon3, Cannon4, Sniper1, Sniper2;



</system>
	<queries>
		<query>
			<formula>E[&lt;=100;1000](max: turret_count)





</formula>
			<comment/>
			<result outcome="success" type="quantity" value="203.612 ± 0.132629 (95% CI)" timestamp="2025-04-13 11:47:49 +0200">
				<details>203.612 ± 0.132629 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="max: turret_count" yaxis="probability density">
					<series title="density" type="b(1.000000)" color="0x0000ff" encoding="csv">196.0,0.001
197.0,0.002
198.0,0.008
199.0,0.025
200.0,0.044
201.0,0.076
202.0,0.122
203.0,0.192
204.0,0.185
205.0,0.159
206.0,0.106
207.0,0.052
208.0,0.02
209.0,0.008
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">203.612,0.0
203.612,0.192
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=14
Runs: 1000 in total, 1000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [196, 209]
Mean estimate of displayed sample: 203.612 ± 0.132629 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="max: turret_count" yaxis="probability">
					<series title="probability" type="b(1.000000)" color="0x0000ff" encoding="csv">196.0,0.001
197.0,0.002
198.0,0.008
199.0,0.025
200.0,0.044
201.0,0.076
202.0,0.122
203.0,0.192
204.0,0.185
205.0,0.159
206.0,0.106
207.0,0.052
208.0,0.02
209.0,0.008
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">203.612,0.0
203.612,0.192
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=14
Runs: 1000 in total, 1000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [196, 209]
Mean estimate of displayed sample: 203.612 ± 0.132629 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="max: turret_count" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">196.0,0.0
197.0,0.001
198.0,0.003
199.0,0.011
200.0,0.036
201.0,0.08
202.0,0.156
203.0,0.278
204.0,0.47
205.0,0.655
206.0,0.814
207.0,0.92
208.0,0.972
209.0,0.992
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">203.612,0.0
203.612,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=14
Runs: 1000 in total, 1000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [196, 209]
Mean estimate of displayed sample: 203.612 ± 0.132629 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="max: turret_count" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">196.0,0.003682083896865672
197.0,0.005558924279826673
198.0,0.008742023238478303
199.0,0.019596628222016514
200.0,0.04949291171801237
201.0,0.09857977904790216
202.0,0.17999718498898634
203.0,0.3068938177281916
204.0,0.5014836820760212
205.0,0.6844700767243275
206.0,0.8376640223583917
207.0,0.9360580171533267
208.0,0.9813153138044625
209.0,0.9965400238346707
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">196.0,0.0
197.0,2.5317487491294045E-5
198.0,6.190999316495713E-4
199.0,0.005503594192313587
200.0,0.025338914929837742
201.0,0.06394198284667334
202.0,0.13404912388910878
203.0,0.25041975045140225
204.0,0.43869341194103906
205.0,0.6246139976951355
206.0,0.7884716407300623
207.0,0.9014202209520978
208.0,0.9597851126261567
209.0,0.9842979508239253
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">196.0,0.0
197.0,0.001
198.0,0.003
199.0,0.011
200.0,0.036
201.0,0.08
202.0,0.156
203.0,0.278
204.0,0.47
205.0,0.655
206.0,0.814
207.0,0.92
208.0,0.972
209.0,0.992
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">203.612,0.0
203.612,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=14
Runs: 1000 in total, 1000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [196, 209]
Mean estimate of displayed sample: 203.612 ± 0.132629 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="max: turret_count" yaxis="count">
					<series title="count" type="b(1.000000)" color="0x0000ff" encoding="csv">196.0,1.0
197.0,2.0
198.0,8.0
199.0,25.0
200.0,44.0
201.0,76.0
202.0,122.0
203.0,192.0
204.0,185.0
205.0,159.0
206.0,106.0
207.0,52.0
208.0,20.0
209.0,8.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">203.612,0.0
203.612,192.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=1, bucket count=14
Runs: 1000 in total, 1000 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [196, 209]
Mean estimate of displayed sample: 203.612 ± 0.132629 (95% CI)</comment>
				</plot>
			</result>
		</query>
	</queries>
</nta>
